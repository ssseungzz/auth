# H2 설정
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2

# jpa 설정
# spring.jpa.show_sql = true
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.database=h2
# spring.jpa.generate-ddl=true

# Datasource 설정
# spring.datasouce.url=jdbc:h2:mem:testdb
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=

# h2 문법을 mysql로 변경
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# spring.jpa.properties.hibernate.dialect.storage_engine=innodb
# spring.datasource.hikari.jdbc-url=jdbc:h2:mem://localhost/~/testdb;MODE=MYSQL

# logging
logging.level.com.ssseungzz.authentication.service.UserService=trace

server.address=localhost
server.port=8080

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

# MySQL 을 사용할 것.
spring.jpa.database=mysql


# MySQL 설정
spring.datasource.url=jdbc:mysql://localhost:3306/sample?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=1234qwer
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

